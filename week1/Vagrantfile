# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  config.vm.network "forwarded_port", guest: 8080, host: 8081

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = "1024"
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "file", source: 'hello-spring-boot-0.1.0.jar', destination: '/home/vagrant/hello-spring-boot-0.1.0.jar'

  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y openjdk-11-jre-headless

    groupadd -r app
    useradd -r -s /bin/false -g app appuser

    cat <<EOF > /etc/systemd/system/hello-spring.service
[Unit]
Description=Run Hello World Spring Boot app

[Service]
WorkingDirectory=/home/vagrant
ExecStart=/usr/bin/java -Xms128m -Xmx256m -jar hello-spring-boot-0.1.0.jar
User=appuser
Type=simple
Restart=on-failure
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl start hello-spring.service
    systemctl status hello-spring
  SHELL
end
